/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mainPage;

import ProtocoleSAMOP.ReponseSAMOP;
import ProtocoleSAMOP.RequeteSAMOP;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStreamWriter;
import java.net.UnknownHostException;
import java.security.KeyManagementException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.UnrecoverableKeyException;
import java.security.cert.CertificateException;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.net.ssl.KeyManagerFactory;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSocket;
import javax.net.ssl.SSLSocketFactory;
import javax.net.ssl.TrustManagerFactory;
import requetePage.requetePage;

/**
 *
 * @author luybe
 */
public class loginPage extends javax.swing.JFrame {
    public SSLSocket SslSocket = null; 
    public BufferedReader dis=null; BufferedWriter dos=null; 
    public String ligneDuServeur; 
    private ObjectInputStream ois;
    private ObjectOutputStream oos;
    
    /**
     * Creates new form loginPage
     */
    public loginPage() throws FileNotFoundException, IOException, NoSuchAlgorithmException, CertificateException, UnrecoverableKeyException, KeyManagementException {
       
            initComponents();
            
            this.setVisible(true);
           
     
          
 
 } 
 



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        loginTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordTF = new javax.swing.JTextField();
        etat = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Login :");

        jButton1.setText("Connexion");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Mot de passe :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(passwordTF)
                                    .addComponent(loginTF, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(etat, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etat, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                                               
             try {
                 KeyStore ServerKs = KeyStore.getInstance("JKS");
                 String FICHIER_KEYSTORE = "C:\\test\\test_keystore.jks";
                 char[] PASSWD_KEYSTORE = "123456".toCharArray();
                 FileInputStream ServerFK = new FileInputStream (FICHIER_KEYSTORE);
                 ServerKs.load(ServerFK, PASSWD_KEYSTORE);
                 // 2. Contexte
                 SSLContext SslC = SSLContext.getInstance("SSLv3");
                 KeyManagerFactory kmf = KeyManagerFactory.getInstance("SunX509");
                 char[] PASSWD_KEY = "123456".toCharArray();
                 kmf.init(ServerKs, PASSWD_KEY);
                 TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");
                 tmf.init(ServerKs);
                 SslC.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);
                 // 3. Factory
                 SSLSocketFactory SslSFac= SslC.getSocketFactory();
                 // 4. Socket
                 SslSocket = (SSLSocket) SslSFac.createSocket("127.0.0.1", 6000);
                 
                 String completeLog = loginTF.getText() + ":" + passwordTF.getText();
                 RequeteSAMOP req = new RequeteSAMOP(RequeteSAMOP.LOGIN, completeLog);
                 oos = new ObjectOutputStream(SslSocket.getOutputStream());
                 oos.writeObject(req);
                 oos.flush();
                 ReponseSAMOP rep = null;
                 ois = new ObjectInputStream(SslSocket.getInputStream());
                 rep = (ReponseSAMOP) ois.readObject();
                 System.out.println("rep : " + rep.getChargeUtile());
                 String[] fonction = rep.getChargeUtile().split(":");
                 if(rep.getCode()== ReponseSAMOP.LOGIN_OK && fonction.length>1)
                 {
                  requetePage rp = new requetePage(ois,oos,SslSocket,fonction[1],loginTF.getText());
                  rp.setVisible(true);
                  this.dispose();       
                 }
                 else
                 {
                     etat.setText(rep.getChargeUtile());
                     etat.setForeground(Color.red);            
                 }
             } catch (KeyStoreException ex) {
                 Logger.getLogger(loginPage.class.getName()).log(Level.SEVERE, null, ex);
             } catch (ClassNotFoundException ex) {
                 Logger.getLogger(loginPage.class.getName()).log(Level.SEVERE, null, ex);
             } catch (FileNotFoundException ex) {
                 Logger.getLogger(loginPage.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IOException ex) {
                 Logger.getLogger(loginPage.class.getName()).log(Level.SEVERE, null, ex);
             } catch (NoSuchAlgorithmException ex) {
                 Logger.getLogger(loginPage.class.getName()).log(Level.SEVERE, null, ex);
             } catch (CertificateException ex) {
                 Logger.getLogger(loginPage.class.getName()).log(Level.SEVERE, null, ex);
             } catch (UnrecoverableKeyException ex) {
                 Logger.getLogger(loginPage.class.getName()).log(Level.SEVERE, null, ex);
             } catch (KeyManagementException ex) {
                 Logger.getLogger(loginPage.class.getName()).log(Level.SEVERE, null, ex);
             }
      
        
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(loginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(loginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(loginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(loginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel etat;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField loginTF;
    private javax.swing.JTextField passwordTF;
    // End of variables declaration//GEN-END:variables
}
